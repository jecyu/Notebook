(window.webpackJsonp=window.webpackJsonp||[]).push([[128],{1361:function(e,s,t){"use strict";t.r(s);var n=t(44),r=Object(n.a)({},(function(){var e=this,s=e.$createElement,t=e._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"docker"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker"}},[e._v("#")]),e._v(" docker")]),e._v(" "),t("h2",{attrs:{id:"头脑风暴"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#头脑风暴"}},[e._v("#")]),e._v(" 头脑风暴")]),e._v(" "),t("ul",[t("li",[e._v("docker 获取镜像失败\n"),t("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/6/10/16b41fb1080fc1b2?w=1444&h=182&f=png&s=144491",alt:""}})]),e._v(" "),t("li",[e._v("容器交流")]),e._v(" "),t("li",[e._v("运行容器")]),e._v(" "),t("li",[e._v("docker commit 镜像构成，一层层构建，慎用，每层不影响其它层")]),e._v(" "),t("li",[e._v("容器的修改历史，放在存储层")]),e._v(" "),t("li",[e._v("Dockerfile 定制镜像")]),e._v(" "),t("li",[e._v("镜像构建时，一定要确保每一层只添加真正需要添加的东西，任何无关的东西都应该清理掉。每一层构建的最后一定要清理掉无关文件。")]),e._v(" "),t("li",[e._v("镜像构建"),t("strong",[e._v("上下文")]),e._v("，远程操作服务 docker 引擎。")]),e._v(" "),t("li",[e._v("如何管理 dockerfile 等文件目录，存放在哪里，目录规范是什么")]),e._v(" "),t("li",[e._v("端口映射")]),e._v(" "),t("li",[e._v("网路 Docker 允许通过外部访问容器或容器互联的方式来提供网络服务")]),e._v(" "),t("li",[e._v("容器有自己的内部网络和 ip 地址")]),e._v(" "),t("li",[e._v("应用场景：office-online，使用 docker 安装 window")]),e._v(" "),t("li",[e._v("docker 相关文件放到哪个目录呢")]),e._v(" "),t("li",[e._v("对比传统的方式，有什么不同")]),e._v(" "),t("li",[e._v("可以导入、导出容器，这样就可以移动了。")]),e._v(" "),t("li",[e._v("针对 docker 官网介绍的Docker 作为轻量级虚拟化技术，拥有持续集成、版本控制、可移植性、隔离性和安全性等优势。都分别体现在哪里，作一一解读，实践。")]),e._v(" "),t("li",[e._v("挂载的方式来处理容器与主机的文件目录，进行映射。")]),e._v(" "),t("li",[e._v("shell 脚本")]),e._v(" "),t("li",[e._v("自动化部署之后，如何快速把应用移动到另外一个服务器不用作任何的修改。实践。")]),e._v(" "),t("li",[e._v("jenkins + node 自动化")]),e._v(" "),t("li",[e._v("jenkins + nginxs/ tomcat 自动化不俗")]),e._v(" "),t("li",[e._v("pieline 代替图形化")]),e._v(" "),t("li",[e._v("邮箱配置")])]),e._v(" "),t("p",[t("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/6/11/16b471831738c223?w=1452&h=400&f=png&s=299508",alt:""}})]),e._v(" "),t("h2",{attrs:{id:"导语"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#导语"}},[e._v("#")]),e._v(" 导语")]),e._v(" "),t("p",[e._v("好久之前写过一篇博客，内容是"),t("a",{attrs:{href:"https://jecyu.github.io/blog/2018/04/30/2018-04-30-Website-Deployment/",target:"_blank",rel:"noopener noreferrer"}},[e._v("网站线上部署"),t("OutboundLink")],1),e._v("，从连接数据库到上传项目文件，全部是人工手动完成。现在这些统统都可以通过自动化流程来替代。")]),e._v(" "),t("h2",{attrs:{id:"docker-简介"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker-简介"}},[e._v("#")]),e._v(" docker 简介")]),e._v(" "),t("p",[e._v("物理机：一栋楼一户人家\n虚拟机：一套房\ndocker: 一套房隔成多个小间，胶囊式公寓")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/6/9/16b3ca8ef46024db?w=692&h=261&f=png&s=24790",alt:""}}),e._v(" "),t("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/6/9/16b3ca8d1f228c9d?w=689&h=195&f=png&s=22346",alt:""}})]),e._v(" "),t("p",[e._v("docker 解决了什么问题？")]),e._v(" "),t("blockquote",[t("p",[e._v("Docker 是一个开源的应用容器引擎，让开发者可以打包他们的应用以及依赖包到一个可移植的容器中，该容器包含了应用程序的代码、运行环境、依赖库、配置文件等必需的资源，通过容器就可以实现方便快速并且与平台解耦的自动化部署方式，无论你部署时的环境如何，容器中的应用程序都会运行在同一种环境下。")])]),e._v(" "),t("p",[e._v("作者：快狗打车前端团队\n链接：https://juejin.im/post/6844903837774397447\n来源：掘金\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。")]),e._v(" "),t("ul",[t("li",[e._v("最简单的，你部署一套自己的开发环境，可能这个开发环境要升级gcc，花了很长时间，然后结果换了一台设备，你又要重新部署一次。有了docker，你只需要commit一个镜像出来，然后在另外的机器上docker create就好了。又或者运行环境一致，你搭建的运行环境可以保持一致，不再会出现这个程序在这台设备上运行出问题了在那一台没出问题，排除运行环境的因素，安心调试代码")])]),e._v(" "),t("p",[e._v("作者：Nov 23\n链接：https://www.zhihu.com/question/45051507/answer/250408750\n来源：知乎\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/6/9/16b3c91e98dee5b0?w=1410&h=658&f=png&s=852642",alt:""}})]),e._v(" "),t("h2",{attrs:{id:"基础"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基础"}},[e._v("#")]),e._v(" 基础")]),e._v(" "),t("h3",{attrs:{id:"基本概念"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基本概念"}},[e._v("#")]),e._v(" 基本概念")]),e._v(" "),t("h4",{attrs:{id:"镜像"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#镜像"}},[e._v("#")]),e._v(" 镜像")]),e._v(" "),t("p",[e._v("Image 类似 root 文件系统，分层存储，一层层构建。镜像构建时，会一层层构建，前一层是后一层的基础。")]),e._v(" "),t("h4",{attrs:{id:"容器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#容器"}},[e._v("#")]),e._v(" 容器")]),e._v(" "),t("p",[e._v("镜像（Image）和容器（Container）的关系，就像是面向对象程序设计中的 类 和 实例 一样，镜像是静态的定义，容器是镜像运行时的实体。容器可以被创建、启动、停止、删除、暂停等。")]),e._v(" "),t("p",[e._v("容器的实质是进程，但与直接在宿主执行的进程不同，容器进程运行于属于自己的独立的 命名空间。因此容器可以拥有自己的 root 文件系统、自己的网络配置、自己的进程空间，甚至自己的用户 ID 空间")]),e._v(" "),t("h4",{attrs:{id:"仓库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#仓库"}},[e._v("#")]),e._v(" 仓库")]),e._v(" "),t("p",[e._v("镜像构建完成后，可以很容易的在当前宿主机上运行，但是，如果需要在其它服务器上使用这个镜像，我们就需要一个集中的存储、分发镜像的服务，Docker Registry 就是这样的服务。")]),e._v(" "),t("p",[e._v("一个 Docker Registry 中可以包含多个 仓库（Repository）；每个仓库可以包含多个 标签（Tag）；每个标签对应一个镜像。")]),e._v(" "),t("h3",{attrs:{id:"docker-一些常见操作和命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker-一些常见操作和命令"}},[e._v("#")]),e._v(" docker 一些常见操作和命令")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/6/20/16b75061d91c12bc?w=2212&h=1252&f=png&s=677320",alt:""}})]),e._v(" "),t("h3",{attrs:{id:"容器操作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#容器操作"}},[e._v("#")]),e._v(" 容器操作")]),e._v(" "),t("h4",{attrs:{id:"进入容器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#进入容器"}},[e._v("#")]),e._v(" 进入容器")]),e._v(" "),t("h4",{attrs:{id:"容器开启"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#容器开启"}},[e._v("#")]),e._v(" 容器开启")]),e._v(" "),t("p",[e._v("容器开启后，又重新被关闭了。Docker为什么刚运行就退出了?分析日志 docker logs\nhttps://segmentfault.com/q/1010000007434058")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/6/16/16b5e89d395e6b56?w=1542&h=432&f=png&s=270745",alt:""}})]),e._v(" "),t("h2",{attrs:{id:"项目实战"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#项目实战"}},[e._v("#")]),e._v(" 项目实战")]),e._v(" "),t("h3",{attrs:{id:"使用-docker-安装-mysql"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用-docker-安装-mysql"}},[e._v("#")]),e._v(" 使用 docker 安装 mysql")]),e._v(" "),t("h3",{attrs:{id:"使用-docker-自动化部署"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用-docker-自动化部署"}},[e._v("#")]),e._v(" 使用 docker 自动化部署")]),e._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 拉取最新的jenkins镜像")]),e._v("\ndocker pull jenkins:latest\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 启动jenkins")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" docker run -d -u "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),e._v(" --privileged  --name jenkins_node1 -p "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("49003")]),e._v(":8080 -v /root/jenkins_node1:/var/jenkins_home jenkins:latest\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("### jenkins + node")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br")])]),t("h3",{attrs:{id:"docker-容器中配置nginx后报403-forbidden-解决办法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker-容器中配置nginx后报403-forbidden-解决办法"}},[e._v("#")]),e._v(" Docker 容器中配置nginx后报403 Forbidden 解决办法")]),e._v(" "),t("p",[e._v("1、Docker挂载主机目录，访问相应的文件出现Premission denied的权限访问问题")]),e._v(" "),t("p",[e._v("问题原因及解决办法\n原因是CentOS7中的安全模块selinux把权限禁掉了，主要是挂载的目录没有权限的问题\n2、添加"),t("code",[e._v("selinux")]),e._v("规则，改变要挂载的目录的安全性文本")]),e._v(" "),t("p",[e._v("chcon -Rt svirt_sandbox_file_t /home/hct/sample/")]),e._v(" "),t("p",[e._v("或者使用数据卷容器来代替挂载的目录，主要是可以导出给其他方使用")]),e._v(" "),t("h2",{attrs:{id:"docker-安装与卸载"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker-安装与卸载"}},[e._v("#")]),e._v(" docker 安装与卸载")]),e._v(" "),t("h3",{attrs:{id:"安装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[e._v("#")]),e._v(" 安装")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("一、查看是否已安装了Docker软件包：\n#查看是否已经安装的Docker软件包\nsudo yum list installed | grep docker")])]),e._v(" "),t("li",[t("p",[e._v("二、如果已安装不想要的docker/docker-engine/docker-ce软件包，卸载掉\n#如果已安装不想要docker、docker-engine、docker-ce相关的软件包，则卸载掉：\nsudo yum -y remove docker docker-common docker-selinux docker-engine docker-engine-selinux container-selinux docker-ce")])]),e._v(" "),t("li",[t("p",[e._v("#删除所有的镜像、容器、数据卷、配置文件等\nsudo rm -rf /var/lib/docker")])]),e._v(" "),t("li",[t("p",[e._v("三、安装Docker-ce")])])]),e._v(" "),t("div",{staticClass:"language-ba line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("#先安装yum-utils工具和device-mapper相关依赖包\nsudo yum install -y yum-utils \\\ndevice-mapper-persistent-data \\\nlvm2\n \n#添加docker-ce stable版本的仓库\nsudo yum-config-manager \\\n  --add-repo \\\n  https://download.docker.com/linux/centos/docker-ce.repo\n \n#更新yum缓存文件\nsudo yum makecache fast\n \n#查看所有可安装的docker-ce版本\nsudo yum list docker-ce --showduplicates | sort -r\n \n#安装docker-ce-selinux-17.03.2.ce，否则安装docker-ce会报错\nyum install https://download.docker.com/linux/centos/7/x86_64/stable/Packages/docker-ce-selinux-17.03.2.ce-1.el7.centos.noarch.rpm \n \n#安装指定版本docker-ce,这里安装的是docker-ce-17.03.2.ce\nsudo yum install docker-ce-17.03.2.ce-1.el7.centos \n \n#允许开机启动docker-ce服务\nsudo systemctl enable docker.service\n \n#启动Docker-ce服务\nsudo systemctl start docker\n \n#检查是否正常安装：\nsudo yum list installed | grep docker\nsudo docker info\n#运行测试容器hello-world\nsudo docker run --rm hello-world\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br"),t("span",{staticClass:"line-number"},[e._v("12")]),t("br"),t("span",{staticClass:"line-number"},[e._v("13")]),t("br"),t("span",{staticClass:"line-number"},[e._v("14")]),t("br"),t("span",{staticClass:"line-number"},[e._v("15")]),t("br"),t("span",{staticClass:"line-number"},[e._v("16")]),t("br"),t("span",{staticClass:"line-number"},[e._v("17")]),t("br"),t("span",{staticClass:"line-number"},[e._v("18")]),t("br"),t("span",{staticClass:"line-number"},[e._v("19")]),t("br"),t("span",{staticClass:"line-number"},[e._v("20")]),t("br"),t("span",{staticClass:"line-number"},[e._v("21")]),t("br"),t("span",{staticClass:"line-number"},[e._v("22")]),t("br"),t("span",{staticClass:"line-number"},[e._v("23")]),t("br"),t("span",{staticClass:"line-number"},[e._v("24")]),t("br"),t("span",{staticClass:"line-number"},[e._v("25")]),t("br"),t("span",{staticClass:"line-number"},[e._v("26")]),t("br"),t("span",{staticClass:"line-number"},[e._v("27")]),t("br"),t("span",{staticClass:"line-number"},[e._v("28")]),t("br"),t("span",{staticClass:"line-number"},[e._v("29")]),t("br"),t("span",{staticClass:"line-number"},[e._v("30")]),t("br"),t("span",{staticClass:"line-number"},[e._v("31")]),t("br"),t("span",{staticClass:"line-number"},[e._v("32")]),t("br"),t("span",{staticClass:"line-number"},[e._v("33")]),t("br")])]),t("h2",{attrs:{id:"docker-jenkins-自动化部"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker-jenkins-自动化部"}},[e._v("#")]),e._v(" docker + jenkins 自动化部")]),e._v(" "),t("p",[e._v("问题：基于 nginx 镜像生成的容器，采用挂载在 jenkins 镜像映射后的目录，当该目录里面的文件更新时，会导致xxx-frontend 容器访问页面出现 403 错误。\n原因是：jenkins_node1/workspace/ 更新时，love-story/dist 的目录权限被重设为不可读。")]),e._v(" "),t("p",[e._v("1、Docker挂载主机目录，访问相应的文件出现Premission denied的权限访问问题")]),e._v(" "),t("p",[e._v("问题原因及解决办法\n原因是CentOS7中的安全模块selinux把权限禁掉了，主要是挂载的目录没有权限的问题\n2、添加selinux规则，改变要挂载的目录的安全性文本")]),e._v(" "),t("p",[e._v("chcon -Rt svirt_sandbox_file_t /home/hct/sample/")]),e._v(" "),t("p",[e._v("Selinux 详细介绍 https://cloud.tencent.com/developer/article/1077994\nSELinux 主要作用就是最大限度地减小系统中服务进程可访问的资源（最小权限原则）。")]),e._v(" "),t("p",[e._v("在使用了 SELinux 的操作系统中，决定一个资源是否能被访问的因素除了文件权限和用户权限之外，还需要判断每一类进程是否拥有对某一类资源的访问权限。")]),e._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[e._v("docker run "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n-p "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("49008")]),e._v(":80 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n-d --name xxxx-frontend "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n--mount "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("type")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("bind,source"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("/var/www/jeyolan/nginx,target"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("/etc/nginx/conf.d "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n--mount "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("type")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("bind,source"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("/root/jenkins_node1/workspace/love-story/dist,target"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("/usr/share/nginx/html "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\nnginx\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br")])]),t("p",[e._v("所以还是采用脚本自动删除镜像，和重建镜像")]),e._v(" "),t("h2",{attrs:{id:"参考资料"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[e._v("#")]),e._v(" 参考资料")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("官方权威文档 https://docs.docker.com/get-started/")])]),e._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://ap.weixin.qq.com/s/tbJ-X3_zKi4vR_1ST5maTQ",target:"_blank",rel:"noopener noreferrer"}},[e._v("Web前端开发的后端指南"),t("OutboundLink")],1)])]),e._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://juejin.im/post/6844903837774397447",target:"_blank",rel:"noopener noreferrer"}},[e._v("[手把手系列之]Docker 部署 vue 项目"),t("OutboundLink")],1)])]),e._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://yeasy.gitbooks.io/docker_practice/content/basic_concept/image.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Docker 从入门到实践"),t("OutboundLink")],1)])]),e._v(" "),t("li",[t("p",[e._v("http://www.ruanyifeng.com/blog/2018/02/docker-tutorial.html")])]),e._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://blog.csdn.net/CSDN_duomaomao/article/details/78997138",target:"_blank",rel:"noopener noreferrer"}},[e._v("CentOS7中Docker-ce的卸载和安装"),t("OutboundLink")],1),e._v("安装直接使用脚本安装，")])]),e._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://jenkins.io/zh/doc/#doc/pipeline/tour/getting-started#",target:"_blank",rel:"noopener noreferrer"}},[e._v("jenkins"),t("OutboundLink")],1)])]),e._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://blog.csdn.net/tianhua79658788/article/details/78249908",target:"_blank",rel:"noopener noreferrer"}},[e._v("Jenkins插件下载失败两种处理办法"),t("OutboundLink")],1)])]),e._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://stackoverflow.com/questions/41117989/jenkins-2-dependency-errors-loading-some-plugins",target:"_blank",rel:"noopener noreferrer"}},[e._v("jenkins插件安装失败处理"),t("OutboundLink")],1)])])])])}),[],!1,null,null,null);s.default=r.exports}}]);