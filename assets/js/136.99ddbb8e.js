(window.webpackJsonp=window.webpackJsonp||[]).push([[136],{1369:function(s,t,e){"use strict";e.r(t);var a=e(44),n=Object(a.a)({},(function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"redis"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#redis"}},[s._v("#")]),s._v(" Redis")]),s._v(" "),e("p",[s._v("Redis 是一种数据库，不过更准确地来说，它更像一台结构化的数据服务器，从定义来说相比 MySQL 更接近 MongoDB。")]),s._v(" "),e("p",[s._v("和操作表中的行或者集合中的文档不同，"),e("u",[s._v("在 Redis 中是通过键来访问数据的。")]),s._v("因此，可以将 Redis 想象成是通过如下所示的 JavaScript 对象的方式来存储数据的：")]),s._v(" "),e("div",{staticClass:"language-json line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-json"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[s._v('"key"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"some value"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[s._v('"key2"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"some other value"')]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[s._v("不过，正因为它是一个结构化的数据服务器，能存储的值自然不仅仅是简单的字符串。如下都是 Redis 支持的数据类型：")]),s._v(" "),e("ul",[e("li",[s._v("字符串 （string）")]),s._v(" "),e("li",[s._v("列表（list）")]),s._v(" "),e("li",[s._v("数据集（set）")]),s._v(" "),e("li",[s._v("哈希（hash）")]),s._v(" "),e("li",[s._v("有序数据集（sorted set）")])]),s._v(" "),e("p",[s._v("然而，Redis 和 MongoDB 最显著的不同点就是，Redis 中的文档结构总是扁平的。举例来说，"),e("u",[s._v("即使一个键包含类似哈希的 JavaScript 对象，却不能包含像 MongoDB  支持的那种"),e("code",[s._v("嵌套的数据结构")]),s._v("。")])]),s._v(" "),e("p",[s._v("另一个不同点在于持久化数据方式的不同。"),e("u",[s._v("Redis 设计的初衷是内存存储，搭配可配置的磁盘持久化思路，所以速度很快。")]),s._v("有一点很重要，需要记住：持久化到磁盘是很重要的，因为任何存储在内存中的东西都是不稳定的，而且会随着系统崩溃或者重启而受到影响。")]),s._v(" "),e("p",[s._v("这意味着，对于敏感的数据系统而言（如处理金融交易），在开发之前，使用以及配置 Redis 都要非常仔细。"),e("u",[s._v("尽管 Redis 的数据集（我们所操作的所有数据）存储在内存中，但是它有多重策略来将数据备份到磁盘中。")])]),s._v(" "),e("p",[s._v("总的来说，你可以把 Redis 看作是简单、庞大、扁平（键-值）的 JavaScript 对象，其中值可以是特殊的数据类型（哈希、数据集、字符串等），它是为"),e("code",[s._v("高速读写数据")]),s._v("孕育而生的（所有数据都存在内存中。）")])])}),[],!1,null,null,null);t.default=n.exports}}]);